// Code generated by MockGen. DO NOT EDIT.
// Source: metric.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	time "time"
)

// MockMetric is a mock of Metric interface
type MockMetric struct {
	ctrl     *gomock.Controller
	recorder *MockMetricMockRecorder
}

// MockMetricMockRecorder is the mock recorder for MockMetric
type MockMetricMockRecorder struct {
	mock *MockMetric
}

// NewMockMetric creates a new mock instance
func NewMockMetric(ctrl *gomock.Controller) *MockMetric {
	mock := &MockMetric{ctrl: ctrl}
	mock.recorder = &MockMetricMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMetric) EXPECT() *MockMetricMockRecorder {
	return m.recorder
}

// Timing mocks base method
func (m *MockMetric) Timing(name string, value time.Duration, tags []string, rate float64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Timing", name, value, tags, rate)
	ret0, _ := ret[0].(error)
	return ret0
}

// Timing indicates an expected call of Timing
func (mr *MockMetricMockRecorder) Timing(name, value, tags, rate interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Timing", reflect.TypeOf((*MockMetric)(nil).Timing), name, value, tags, rate)
}
